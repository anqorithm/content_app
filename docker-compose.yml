services:
  cms:
    build: .
    env_file:
      - .env
    ports:
      - 3001:3000
    volumes:
      - .:/usr/src/app
    command: go run services/cms/main.go -b 0.0.0.0

  discovery:
    build: .
    env_file:
      - .env
    ports:
      - 3002:3001
    volumes:
      - .:/usr/src/app
    command: go run services/discovery/main.go -b 0.0.0.1

  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 5432:5432
    volumes:
      - postgres-db:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_API_REQUESTS_MAX=10000
      - MINIO_API_REQUESTS_DEADLINE=10m
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"

  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/${MINIO_BUCKET} --ignore-existing;
      echo 'Bucket ${MINIO_BUCKET} created or already exists';
      exit 0;
      "

volumes:
  postgres-db:
  minio-data:
